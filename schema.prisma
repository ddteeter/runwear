datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

generator kysely {
  provider = "prisma-kysely"
}

model User {
  id String @id @db.Uuid @default(uuid())
  email String @unique
  name String
  connectedServices ConnectedService[]
}

model ConnectedService {
  id String @id @db.Uuid @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  subscriptionId String
  service WorkoutSource
}

model Activity {
  id String @id @db.Uuid @default(uuid())
  name String
  at DateTime
  durationSeconds Int
  latitude Decimal
  longitude Decimal
  workout LinkedWorkout?
  outfit Outfit?
}

model Outfit {
  id String @id @db.Uuid @default(uuid())
  date DateTime @db.Date
  activity Activity? @relation(fields: [activityId], references: [id])
  activityId String @db.Uuid @unique
  articles OutfitArticle[]
  conditions Conditions?
}

model Conditions {
  id String @id @db.Uuid @default(uuid())
  temperature Decimal
  perceivedTemperature Decimal?
  humidity Int?
  windSpeed Int?
  windDirection String?
  precipitationType String?
  precipitationIntensity Int?
  outfit Outfit @relation(fields: [outfitId], references: [id])
  outfitId String @db.Uuid @unique
  dataSource WeatherDataSource
  dataSourceUrl String?
}

enum WeatherDataSource {
  MANUALLY_ENTERED
  APPLE_WEATHER_KIT
}

model LinkedWorkout {
  id String @id @db.Uuid @default(uuid())
  globalId String @unique
  url String
  source WorkoutSource
  activity Activity @relation(fields: [activityId], references: [id])
  activityId String @db.Uuid @unique
}

enum WorkoutSource {
  STRAVA
  GARMIN
  APPLE_HEALTH
}

model OutfitArticle {
  id String @id @db.Uuid @default(uuid())
  outfit Outfit @relation(fields: [outfitId], references: [id])
  outfitId String @db.Uuid
  article Article @relation(fields: [articleId], references: [id])
  articleId String @db.Uuid
  layer Layer?
}

model Article {
  id String @id @db.Uuid @default(uuid())
  brand Brand @relation(fields: [brandId], references: [id])
  brandId String @db.Uuid
  name String
  year Int?
  url String?
  bodyPart BodyPart
  outfits OutfitArticle[]
}

enum BodyPart {
  HEAD
  FACE
  NECK
  ARMS
  HANDS
  TORSO
  LEGS
  FOOT
}

enum Layer {
  BASE
  MID
  OUTER
}

model Brand {
  id String @id @db.Uuid @default(uuid())
  name String @unique
  url String?
  articles Article[]
}

model Queue {
  id String @id @db.Uuid @default(uuid())
  timeInserted DateTime @default(now())
  payload Json
  qualifier QueueQualifier
}

enum QueueQualifier {
  STRAVA_WEBHOOK
}